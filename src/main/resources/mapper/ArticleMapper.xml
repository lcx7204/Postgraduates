<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yixuan.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.yixuan.entity.Article" >
    <id column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="article_name" property="articleName" jdbcType="VARCHAR" />
    <result column="article_category" property="articleCategory" jdbcType="VARCHAR" />
    <result column="publish_user" property="publishUser" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
    <result column="praise_num" property="praiseNum" jdbcType="INTEGER" />
    <!--一对一映射User实体-->
    <result property="user.avatorUrl" column="avator_url" jdbcType="VARCHAR" />
    <result property="user.nickName" column="nick_name" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yixuan.entity.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    article_id, article_name, article_category, publish_user, publish_date, praise_num
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yixuan.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yixuan.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yixuan.entity.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yixuan.entity.Article" >
    insert into article (article_id, article_name, article_category, 
      publish_user, publish_date, praise_num, 
      article_content)
    values (#{articleId,jdbcType=VARCHAR}, #{articleName,jdbcType=VARCHAR}, #{articleCategory,jdbcType=VARCHAR}, 
      #{publishUser,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, #{praiseNum,jdbcType=INTEGER}, 
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yixuan.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleName != null" >
        article_name,
      </if>
      <if test="articleCategory != null" >
        article_category,
      </if>
      <if test="publishUser != null" >
        publish_user,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="praiseNum != null" >
        praise_num,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleName != null" >
        #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleCategory != null" >
        #{articleCategory,jdbcType=VARCHAR},
      </if>
      <if test="publishUser != null" >
        #{publishUser,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="praiseNum != null" >
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yixuan.entity.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.articleName != null" >
        article_name = #{record.articleName,jdbcType=VARCHAR},
      </if>
      <if test="record.articleCategory != null" >
        article_category = #{record.articleCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.publishUser != null" >
        publish_user = #{record.publishUser,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.praiseNum != null" >
        praise_num = #{record.praiseNum,jdbcType=INTEGER},
      </if>
      <if test="record.articleContent != null" >
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      article_category = #{record.articleCategory,jdbcType=VARCHAR},
      publish_user = #{record.publishUser,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      praise_num = #{record.praiseNum,jdbcType=INTEGER},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      article_category = #{record.articleCategory,jdbcType=VARCHAR},
      publish_user = #{record.publishUser,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      praise_num = #{record.praiseNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yixuan.entity.Article" >
    update article
    <set >
      <if test="articleName != null" >
        article_name = #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleCategory != null" >
        article_category = #{articleCategory,jdbcType=VARCHAR},
      </if>
      <if test="publishUser != null" >
        publish_user = #{publishUser,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="praiseNum != null" >
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yixuan.entity.Article" >
    update article
    set article_name = #{articleName,jdbcType=VARCHAR},
      article_category = #{articleCategory,jdbcType=VARCHAR},
      publish_user = #{publishUser,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yixuan.entity.Article" >
    update article
    set article_name = #{articleName,jdbcType=VARCHAR},
      article_category = #{articleCategory,jdbcType=VARCHAR},
      publish_user = #{publisupdateByPrimaryKeyhUser,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      praise_num = #{praiseNum,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <!--获取文章列表信息-->
  <select id="getArticleList" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
     from article where article_category like #{articleCategory}
  </select>
  <select id="getArticleListByAdmin" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article where article_category like #{articleCategory1} or article_category like #{articleCategory2}
  </select>
  <!--关键字搜索-->
  <select id="selectByArticleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
     from article where article_name like #{articleName}
  </select>
</mapper>